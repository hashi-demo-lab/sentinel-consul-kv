# This policy uses the HTTP import to call the Consul API 

##### Imports #####
import "http"
import "strings"
import "json"
import "types"
import "tfplan/v2" as tfplan
import "tfrun"
import "base64"
#import kv module ./module/kv.sentinel
import "kv"

##### Parameters #####
# The address for Consul API
param address default "consul-cluster.consul.8f401e26-b086-451f-b61a-4ffb6dd26304.aws.hashicorp.cloud"

# A valid Consul token with read on KV path
param token

path = "policy/mygroup1/myapp1/uat"
workspaceid = tfrun.workspace.id
workspace_name = tfrun.workspace.name

print("vars: ", tfplan.variables)
print("workspaceid: ", workspaceid)
print("workspace_name", workspace_name)

# Validate rule
validate_rule = func(address, token, path) {
  # Get KV policy data using module ./module/kv.sentinel
  get_kv = kv.retrieve_kv_data(address, token, path)
  print("kv_policy from module: ", get_kv)
  validated = false # to check policy
  return validated
}

policy_exclusion = func(path) {
  print("Policy rule is in excluded list: ", path)
  return true # policy exclusion
}

#THIS IS NOT COMPLETE, NEED TO SEPARATE FUNCTION for Key lookup to set boolean

# rule key = #SOME KEY
rule_key = "SOME KEY" #SOME KEY
#Get key from KV json
#set boolean
enablePolicy = true


##### Rules #####
# Main rule conditional based on policy
policy_validated = rule when enablePolicy {validate_rule(address, token, path)}

#Policy Exclusion
exclude_eval = rule when enablePolicy is false {policy_exclusion(path)}


main = rule {
  policy_validated and exclude_eval
}
